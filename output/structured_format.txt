=== SLIDE STRUCTURE FORMAT (THỨ TỰ CỐ ĐỊNH) ===
Report Date: 20250807
Report Period: 08/07/2025 – 08/13/2025
Total Tasks: 3

=== SLIDE ORGANIZATION (FIXED ORDER) ===

SLIDE 1: Cover
- Type: cover
- Content: "20250807進捗報告書"

SLIDE 2: Agenda  
- Type: agenda_slide
- Content: Fixed agenda items (CỐ ĐỊNH)
  1. タスクの目的
  2. 完了済み作業  
  3. 次の作業内容

SLIDE 3: Section Divider 01
- Type: section_divider
- Number: "01"
- Title: "タスクの目的"

SLIDE 4: Purpose Overview
- Type: content
- Title: "1. タスクの目的"
- Content: Task list overview
  ● AIREAD_ARISE-4034【AIRead】位置合わせ機能の強化: tăng độ chính xác của alignment function
    ○ Một số biểu mẫu bị lệch do lấy điểm đặc trưng từ ảnh đã tiền xử lý, trong khi template dùng ảnh gốc ...
    ○ Kết quả: Thay đổi truyền src để lấy warp_affine cho kết quả căn chỉnh tốt ngay cả khi ảnh raw chưa qua tiền x...
  ● AIREAD_ARISE-4157 【multi3_jpn】 Cải thiện độ chính xác mô hình multi3_jpn
    ○ Mô-đun multi3_jpn có tỷ lệ lỗi cao trên các component chứa nhiều chữ (long components) và đọc sai ký...
    ○ Kết quả: Accuracy cải thiện mạnh: long_comp tăng 0%→92%, vban chứa số 1%→99%, ký tự 「〃」 19%→92%; Dilate_num g...
  ● AIREAD_ARISE-4149 【AIRead】 Trong folder Temp của USERPROFILE còn tồn tại onnxruntime-java
    ○ Mỗi lần chạy AIRead tạo thư mục %USERPROFILE%\AppData\Local\Temp\onnxruntime-javaxxxxxxxxxxxxxx (~10...
    ○ Kết quả: Đã xóa được các folder onnxruntime cũ trong Temp mà không ảnh hưởng tới tiến trình khác; thư mục onn...

SLIDE 5: Section Divider 02
- Type: section_divider  
- Number: "02"
- Title: "完了済み作業"

SLIDE 6: Task 1 Subtitle
- Type: subtitle
- Content: "2.1. AIREAD_ARISE-4034【AIRead】位置合わせ機能の強化: tăng độ chính xác của alignment function"

SLIDE 7: Task 1 Problem Description
- Type: content
- Title: "2. 完了済み作業"
- Content:
  ● Một số biểu mẫu bị lệch do lấy điểm đặc trưng từ ảnh đã tiền xử lý, trong khi template dùng ảnh gốc dẫn đến mismatch giữa nguồn điểm đặc trưng (preprocessed) và template (original) gây warp_affine sai lệch; hệ thống xuất một số file debug (SIFT_01_Keypoint_Matches.jpg, SIFT_02_warpPerspective.jpg, SIFT_03_rgb_Image.jpg) theo mặc định gây lộn xộn thư mục output. Yêu cầu: đảm bảo input là ảnh gốc khi lấy feature để matching; chỉ xuất ảnh debug khi flag debug bật.

SLIDE 8: Task 1 Solution Process
- Type: content
- Title: "2. 完了済み作業"
- Content: Solution steps
  ● Vấn đề hiện tại: Việc lấy điểm đặc trưng từ ảnh đã qua tiền xử lý gây mismatch với template gốc, dẫn đến warp_affine không chính xác và ảnh hưởng đến pipeline downstream (mapping fields trên form). Việc xuất debug files mặc định gây tăng dung lượng lưu trữ và nhiễu khi kiểm tra kết quả.
  ● Chúng tôi đã thay đổi luồng truyền tham số để truyền src (ảnh gốc) thay vì binary đã tiền xử lý vào thành phần lấy warp_affine, để tính toán điểm đặc trưng trực tiếp trên ảnh gốc.
  ● Chúng tôi đã kiểm thử matching bằng cách chạy với ảnh template nghiêng và xoay (-2°, +90°, -90°, 180°) để kiểm chứng độ bền của thuật toán khi template có biến đổi góc; kết quả thử nghiệm cho thấy căn chỉnh hoạt động tốt với các biến đổi này.
  ● Chúng tôi đã tích hợp cơ chế điều kiện để chỉ xuất các file debug SIFT_01_Keypoint_Matches.jpg, SIFT_02_warpPerspective.jpg, SIFT_03_rgb_Image.jpg khi flag debug bật.
  ○ Cụ thể, hệ thống có sẵn config IS_DEBUG; chúng tôi đã truyền giá trị này vào hàm debug ảnh để điều khiển xuất ảnh debug (Raw data cũng đề cập AIREAD_DEBUG_MODE=true như điều kiện xuất debug).
  ● Configuration changes: IS_DEBUG (config sẵn) được truyền vào hàm debug ảnh để điều khiển việc in ảnh debug; đồng thời đảm bảo chỉ xuất debug images khi AIREAD_DEBUG_MODE=true.
  ○ Lưu ý: raw data có IS_DEBUG, IS_DEBBUG (typo) và AIREAD_DEBUG_MODE; hiện trạng: khi IS_DEBBUG = false thì ảnh debug không in ra — cần chuẩn hóa flags.
  ● Testing thực hiện: test matching trực tiếp trên ảnh raw (chưa tiền xử lý) và với các template xoay/tilt ở -2°, +90°, -90°, 180°; kiểm tra việc xuất/không xuất các file debug khi flag tắt/bật.
  ● Kết quả đo lường: quá trình căn chỉnh hoạt động tốt trên ảnh raw chưa qua tiền xử lý; khi bật IS_DEBBUG = false thì các ảnh debug không in ra (theo quan sát test).
  ● Quality control: đảm bảo backward compatibility với pipeline hiện có bằng cách chỉ thay đổi luồng truyền src vs binary cho bước lấy warp_affine; verify rằng các thay đổi không gây lỗi trên tập test hiện hành.

SLIDE 9: Task 1 Results & Analysis
- Type: content
- Title: "2. 完了済み作業"
- Content:
  ● Thay đổi truyền src để lấy warp_affine cho kết quả căn chỉnh tốt ngay cả khi ảnh raw chưa qua tiền xử lý; khi IS_DEBBUG = false các ảnh debug không được in ra.
  ● Nguyên nhân chính là bất đồng giữa nguồn ảnh dùng để trích feature (preprocessed) và template (original). Chuẩn hóa nguồn tính feature sang ảnh gốc (src) loại bỏ sai số do filter/thresholding/line-removal trong tiền xử lý. Thử nghiệm với template xoay/tilt chứng minh phương pháp matching (SIFT/warp_affine) bền vững với rotation nếu input là ảnh gốc. Việc điều khiển xuất debug giảm nhiễu output giúp QA và khách hàng dễ phân tích kết quả.
  ● Chất lượng căn chỉnh ổn định trên các test hiện có; cần đồng bộ tên flag debug (IS_DEBUG / IS_DEBBUG / AIREAD_DEBUG_MODE) giữa config và code để tránh nhầm lẫn vận hành.

SLIDE 10: Task 2 Subtitle
- Type: subtitle
- Content: "2.2. AIREAD_ARISE-4157 【multi3_jpn】 Cải thiện độ chính xác mô hình multi3_jpn"

SLIDE 11: Task 2 Problem Description
- Type: content
- Title: "2. 完了済み作業"
- Content:
  ● Mô-đun multi3_jpn có tỷ lệ lỗi cao trên các component chứa nhiều chữ (long components) và đọc sai ký tự 「〃」 (U+3003). Nguyên nhân: preprocess hiện tại resize cố định (height=48 và width cố định) và padding trắng gây vỡ nét ảnh dài; padding trắng khác phân phối dữ liệu huấn luyện (padding xám) dẫn đến mô hình bị suy giảm performance.

SLIDE 12: Task 2 Solution Process
- Type: content
- Title: "2. 完了済み作業"
- Content: Solution steps
  ● Vấn đề hiện tại: hàm preprocess() resize cố định chiều cao và width, padding màu trắng → ảnh dài bị vỡ nét và ảnh ngắn có phân phối màu nền khác so với dữ liệu huấn luyện, làm giảm accuracy trên long_comp và ký tự 「〃」.
  ● Chúng tôi đã sửa lại logic resize trong hàm preprocess() để giữ tỉ lệ chiều rộng thay vì ép buộc width cố định: resize chiều cao cố định 48px, chiều rộng giữ tỉ lệ ban đầu; padding màu xám được thêm vào bên phải tuỳ theo width của batch hiện tại.
  ○ Ảnh quá ngắn được resize chiều cao 48px, chiều rộng theo tỉ lệ ảnh và padding bên phải sao cho giữ đúng tỉ lệ 320x48px (theo yêu cầu batch).
  ● Implementation: thay đổi trực tiếp trong hàm preprocess() từ fixed resize + white padding → fixed height (48px) + adaptive width + gray padding bên phải; đảm bảo padding màu xám tương thích với distribution training data của model.
  ● Configuration changes: resize_policy từ 'fixed_size (height=48,width=320)' → 'fixed_height_adaptive_width (height=48, width=round(original_ratio*48) then pad to 320)'.
  ● Testing thực hiện: test song song trên code dự án và PaddleOCRv5 baseline với bộ test gồm 100 ảnh long_comp, 100 ảnh vban chứa số, 100 ảnh case ký tự 「〃」, 100 ảnh Dilate_num; so sánh kết quả giữa preprocess cũ và mới.
  ● Kết quả đo lường: long_comp 0/100 → 92/100; vban chứa số 1/100 → 99/100; ký tự 〃 19/100 → 92/100; Dilate_num 94/100 → 90/100 (giảm nhẹ).
  ● Quality control: đảm bảo không làm xấu đi hầu hết các trường hợp (chỉ Dilate_num giảm); cần follow-up để phân tích lý do giảm và xác minh không có regression trên các test khác.

SLIDE 13: Task 2 Results & Analysis
- Type: content
- Title: "2. 完了済み作業"
- Content:
  ● Accuracy cải thiện mạnh: long_comp tăng 0%→92%, vban chứa số 1%→99%, ký tự 「〃」 19%→92%; Dilate_num giảm nhẹ 94%→90% cần investigation thêm.
  ● Giải thích cải thiện: giữ tỉ lệ chiều rộng tránh vỡ nét ký tự dọc theo chiều ngang; padding màu xám tương thích với distribution huấn luyện giúp mô hình ổn định trên chuỗi dài và ký tự đặc biệt. Giải thích giảm ở Dilate_num: có thể do thay đổi padding/resize ảnh hưởng đến hình thái sau dilation — là trade-off; cần chạy regression test và có thể áp dụng xử lý đặc biệt (dilation trước resize hoặc branch preprocess cho case số).
  ● Chất lượng nhận diện cho trường hợp dài và ký tự đặc biệt đã cải thiện mạnh và đạt tương đương hoặc tốt hơn reference; cần follow-up để khôi phục accuracy Dilate_num nếu yêu cầu bảo toàn.

SLIDE 14: Task 3 Subtitle
- Type: subtitle
- Content: "2.3. AIREAD_ARISE-4149 【AIRead】 Trong folder Temp của USERPROFILE còn tồn tại onnxruntime-java"

SLIDE 15: Task 3 Problem Description
- Type: content
- Title: "2. 完了済み作業"
- Content:
  ● Mỗi lần chạy AIRead tạo thư mục %USERPROFILE%\AppData\Local\Temp\onnxruntime-javaxxxxxxxxxxxxxx (~10MB mỗi folder). Nếu chạy nhiều lần các folder cũ tích luỹ gây tốn dung lượng. Yêu cầu: xóa các folder temp onnxruntime còn lại sau khi hoàn tất chạy để tránh chiếm dung lượng.

SLIDE 16: Task 3 Solution Process
- Type: content
- Title: "2. 完了済み作業"
- Content: Solution steps
  ● Vấn đề hiện tại: thư mục onnxruntime-javaxxxxxxxxxx được tạo mỗi lần chạy, ~10MB/folder → tích luỹ gây tốn disk trên máy khách.
  ● Chúng tôi đã thêm FileSystemUtil.java vào Core.src.main.java...Core.Utils để cung cấp hàm thao tác file/temp an toàn.
  ● Chúng tôi đã tích hợp việc gọi FileSystemUtil từ MultiCharRecognitonManager.java để xóa các folder onnxruntime cũ trong %USERPROFILE%\AppData\Local\Temp sau khi các tiến trình liên quan không còn sử dụng.
  ● Testing thực hiện: chạy nhiều lần AIRead, kiểm tra các folder onnxruntime trong Temp trước và sau khi chạy dọn dẹp; xác minh không xóa folder onnxruntime đang được tiến trình hiện tại sử dụng.
  ● Kết quả đo lường: các folder onnxruntime cũ đã bị xóa thành công; folder onnxruntime của lần chạy hiện tại không thể xóa do đang được dùng xuyên suốt quá trình suy luận, do đó sẽ luôn còn ~9MB trong Temp.
  ● Quality control: đảm bảo việc xóa không ảnh hưởng đến các tiến trình đang chạy; chỉ xóa các folder không lock/khóa bởi process.

SLIDE 17: Task 3 Results & Analysis
- Type: content
- Title: "2. 完了済み作業"
- Content:
  ● Đã xóa được các folder onnxruntime cũ trong Temp mà không ảnh hưởng tới tiến trình khác; thư mục onnxruntime của lần chạy hiện tại vẫn tồn tại (~9MB) do lock của runtime.
  ● OnnxRuntime tạo thư mục runtime và giữ handle lock trong suốt quá trình suy luận nên không thể xóa folder đang active; xóa các folder cũ giải quyết phần lớn rác disk. Để giảm hơn nữa cần thay đổi cơ chế runtime hoặc cleanup sau khi process kết thúc hoàn toàn.
  ● Giải pháp dọn temp giảm rác và tránh tốn disk; 9–10MB còn lại là giới hạn do onnxruntime. Cần thảo luận với infra/onnxruntime nếu muốn giảm hơn nữa (ví dụ cleanup sau process hoàn tất hoặc cấu hình temp khác).

SLIDE 18: Section Divider 03
- Type: section_divider
- Number: "03"  
- Title: "次の作業内容"

SLIDE 19: Future Work
- Type: content
- Title: "3. 次の作業内容"
- Content:
  ● - AIREAD_ARISE-4157 (multi3_jpn): phân tích nguyên nhân giảm performance ở Dilate_num (94% → 90%): chạy thêm regression test cho Dilate_num, kiểm tra ordering dilation và resize (thử dilation trước resize hoặc điều chỉnh kernel/threshold). Nếu cần, bổ sung xử lý riêng cho các case số (preprocess branch) để khôi phục accuracy cho Dilate_num mà không mất lợi ích cho long_comp và 「〃」.
- AIREAD_ARISE-4034: chuẩn hoá tên flag debug trong config (IS_DEBUG / IS_DEBBUG / AIREAD_DEBUG_MODE) để tránh nhầm lẫn; cập nhật docs config để vận hành. Thêm test cases forms với biến dạng hình học khác để tăng coverage.
- AIREAD_ARISE-4149: thảo luận với team infra/onnxruntime về khả năng cleanup folder runtime sau process kết thúc hoặc cấu hình đường dẫn temp tạm thời để quản lý kích thước.
- Triển khai regression test suite để chạy các test case đã nêu (long_comp, vban number, 「〃」, Dilate_num) tự động trên CI để giám sát các thay đổi tương lai.

=== SLIDE ORDER VERIFICATION ===
1. Cover
2. Agenda  
3. Section 01 ("01" + "タスクの目的")
4. Content ("タスクの目的" với task list only)
5. Section 02 ("02" + "完了済み作業")
6-17. Tasks (mỗi task = subtitle + 3 content slides)
18. Section 03 ("03" + "次の作業内容")
19. Future Work content

=== END STRUCTURE ===
Total Slides: 19
Expected Pattern: Cover → Agenda → Sec01 → Purpose → Sec02 → [Task blocks] → Sec03 → Future
